{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 It contains files: processData.py,  dataVisualization.py, decisionTree.py, province_mapping.R, main.py, basic_stats_analysis.ipynb. \
\
(new_data_0818.csv  is the data after processing by Jerry Yao. )\
\
1. compile \'91processData\'92.py to process data. \
output: \
(1) new data frame with new column \'91label\'92 1 for dogwood users, 0 for others as filename \'91usr_tag_cv\'92 \
(2) province_id.p, city_id.p, county_id. p. Three files. In order to obtain the corresponding province names from JD.com tables (done by Jerry Yao). Then there will be three files: new_province_id.csv, new_city_id.csv, new_county_id.csv, which are already here. \
(3)  gender.p for data visualization\
\
2. compile \'91main.py\'92. \
Output:\
(1) two barplot figures shown on screen and one pie chart on plotly API website. \
(2) decision tree accuracy and tree picture on correspondent working path. \
\
3. compile \'91province_mapping.R\'92 \
Input \'91new_province_id.csv\'92 to show a China map with different frequency for different provinces. \
\
4. compile \'91basic_stats_analysis.ipynb\'92 to do basic statistics. \
Output:\
(1) Age Distribution\
(2) Sale Order Hour Distribution\
(3) User Level Distribution\
\
}